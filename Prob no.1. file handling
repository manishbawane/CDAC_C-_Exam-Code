#include <iostream>
#include <fstream>
#include <string>

using namespace std;

struct BankRecord {
    int accountNumber;
    string name;
    double balance;
};

void addRecord() {
    BankRecord record;
    cout << "Enter Account Number: ";
    cin >> record.accountNumber;
    cout << "Enter Name: ";
    cin.ignore();
    getline(cin, record.name);
    cout << "Enter Balance: ";
    cin >> record.balance;

    ofstream outFile("records.txt", ios::app);
    if (outFile.is_open()) {
        outFile << record.accountNumber << " " << record.name << " " << record.balance << endl;
        outFile.close();
        cout << "Record added successfully." << endl;
    } else {
        cout << "Unable to open file." << endl;
    }
}

void showRecords() {
    BankRecord record;
    ifstream inFile("records.txt");
    if (inFile.is_open()) {
        cout << "Account Number | Name                | Balance" << endl;
        cout << "---------------------------------------------------" << endl;
        while (inFile >> record.accountNumber >> ws && getline(inFile, record.name, ' ') && inFile >> record.balance) {
            cout << record.accountNumber << "         | " << record.name << " | " << record.balance << endl;
        }
        inFile.close();
    } else {
        cout << "No records found." << endl;
    }
}

void searchRecord() {
    int accountNumber;
    cout << "Enter Account Number to search: ";
    cin >> accountNumber;

    BankRecord record;
    ifstream inFile("records.txt");
    bool found = false;
    if (inFile.is_open()) {
        while (inFile >> record.accountNumber >> ws && getline(inFile, record.name, ' ') && inFile >> record.balance) {
            if (record.accountNumber == accountNumber) {
                cout << "Record Found: " << endl;
                cout << "Account Number: " << record.accountNumber << endl;
                cout << "Name: " << record.name << endl;
                cout << "Balance: " << record.balance << endl;
                found = true;
                break;
            }
        }
        inFile.close();
    }
    if (!found) {
        cout << "Record not found." << endl;
    }
}

void editRecord() {
    int accountNumber;
    cout << "Enter Account Number to edit: ";
    cin >> accountNumber;

    BankRecord record;
    ifstream inFile("records.txt");
    ofstream outFile("temp.txt");
    bool found = false;

    if (inFile.is_open() && outFile.is_open()) {
        while (inFile >> record.accountNumber >> ws && getline(inFile, record.name, ' ') && inFile >> record.balance) {
            if (record.accountNumber == accountNumber) {
                cout << "Editing Record..." << endl;
                cout << "Enter new Name: ";
                cin.ignore();
                getline(cin, record.name);
                cout << "Enter new Balance: ";
                cin >> record.balance;
                found = true;
            }
            outFile << record.accountNumber << " " << record.name << " " << record.balance << endl;
        }
        inFile.close();
        outFile.close();
    }

    remove("records.txt");
    rename("temp.txt", "records.txt");

    if (found) {
        cout << "Record updated successfully." << endl;
    } else {
        cout << "Record not found." << endl;
    }
}

void deleteRecord() {
    int accountNumber;
    cout << "Enter Account Number to delete: ";
    cin >> accountNumber;

    BankRecord record;
    ifstream inFile("records.txt");
    ofstream outFile("temp.txt");
    bool found = false;

    if (inFile.is_open() && outFile.is_open()) {
        while (inFile >> record.accountNumber >> ws && getline(inFile, record.name, ' ') && inFile >> record.balance) {
            if (record.accountNumber != accountNumber) {
                outFile << record.accountNumber << " " << record.name << " " << record.balance << endl;
            } else {
                found = true;
            }
        }
        inFile.close();
        outFile.close();
    }

    remove("records.txt");
    rename("temp.txt", "records.txt");

    if (found) {
        cout << "Record deleted successfully." << endl;
    } else {
        cout << "Record not found." << endl;
    }
}

int main() {
    int choice;
    do {
        cout << "\nBanking Record System\n";
        cout << "1. Add Record\n";
        cout << "2. Show Records\n";
        cout << "3. Search Record\n";
        cout << "4. Edit Record\n";
        cout << "5. Delete Record\n";
        cout << "6. Exit\n";
        cout << "Choose an option: ";
        cin >> choice;

        switch (choice) {
            case 1: addRecord(); break;
            case 2: showRecords(); break;
            case 3: searchRecord(); break;
            case 4: editRecord(); break;
            case 5: deleteRecord(); break;
            case 6: cout << "Exiting..." << endl; break;
            default: cout << "Invalid choice. Try again." << endl;
        }
    } while (choice != 6);

    return 0;
}
